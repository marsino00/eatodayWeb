1684722036
waR3U4bTeM%3A89198a71935db58c014e3ea2a2e26ad7-1cda708bf1b43df337dbfc92a9c380d5
s:73492:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"1cda708bf1b43df337dbfc92a9c380d5";s:39:" phpDocumentor\Reflection\Php\File name";s:27:"KpaCrudSampleController.php";s:39:" phpDocumentor\Reflection\Php\File path";s:66:"vendor/siensis/kpacrud/src/Controllers/KpaCrudSampleController.php";s:41:" phpDocumentor\Reflection\Php\File source";s:21526:"<?php

namespace SIENSIS\KpaCrud\Controllers;

use \App\Controllers\BaseController;

use SIENSIS\KpaCrud\Libraries\KpaCrud;

/**
 * KpaCrudSampleController - Is a sample controller, to view how to use KpaCrud Library.
 *                           - Shows a simple table like News
 *                           - Shows a table with two primary keys
 *                           - Shows a table whit two 1=>N relations
 *                           - Shows a table with a 1=>N relation workers=>jobs
 * 
 * @link ../readme.md     To view KpaCrud functions and samples, to customize your expirience
 *  
 * @package App\Controllers
 */
class KpaCrudSampleController extends BaseController
{

    public function hashNewPassword($postData)
    {
        $postData['data_password_hash'] = password_hash($postData['data_password_hash'], PASSWORD_DEFAULT);
        return $postData; // if return null, edit process will be cancelled
    }
    public function hashEditPassword($postData)
    {
        if ($postData['data_password_hash'] != $postData['olddata_password_hash']) {
            // field has a new value. You new to generate new password
            $postData['data_password_hash'] = password_hash($postData['data_password_hash'], PASSWORD_DEFAULT);
        } // else field not changed, you can update with the same value
        return $postData;  // if return null, edit process will be cancelled
    }
    public function myCustomPage($obj)
    {
        $this->request->getUri()->stripQuery('customf');
        $this->request->getUri()->addQuery('customf', 'mpost');

        $html = "<div class=\"container-lg p-4\">";
        $html .= "<form method='post' action='" . base_url($this->request->getPath()) . "?" . $this->request->getUri()->getQuery() . "'>";
        $html .= csrf_field()  . "<input type='hidden' name='test' value='ToSend'>";
        $html .= "<div class=\"bg-secondary p-2 text-white\">";
        $html .= "	<h1>View item</h1>";
        $html .= "</div>";
        $html .= "	<div style=\"margin-top:20px\" class=\"border bg-light\">";
        $html .= "		<div class=\"d-grid\" style=\"margin-top:20px\">";
        $html .= "			<div class=\"p-2 \">	";
        $html .= "				<label>Username</label>	";
        $html .= "				<div class=\"form-control bg-light \">";
        $html .= $obj['username'];
        $html .= "				</div>";
        $html .= "			</div>";
        $html .= "";
        $html .= "			<div class=\"p-2 \">	";
        $html .= "				<label>eCorreu</label>	";
        $html .= "				<div class=\"form-control bg-light\">";
        $html .= $obj['email'];
        $html .= "				</div>";
        $html .= "			</div>";
        $html .= "			";
        $html .= "		</div>";
        $html .= "	</div>";
        $html .= "<div class='pt-2'><input type='submit' value='Envia'></div></form>";
        $html .= "</div>";

        // You can load view info from view file and return to KpaCrud library
        // $html = view('view_route/view_name');

        return $html;
    }
    public function myCustomPagePost($obj)
    {
        // $obj contains info about register if you repeat querystring received in MyCustomPage
        $html = '<h1>Operation ok</h1>';

        /*
        Do something with this->request->getPost information
        */
        return $html;
    }
    public function demo_simpleTable_full()
    {
        $crud = new KpaCrud(); //loads default configuration

        $crud->setTable('users');
        $crud->setPrimaryKey('id');

        if ($crud->isExportMode()) {
            $crud->setColumns(['username', 'email', 'active']);
            $crud->addWhere('users.active=1');
        } else {

            $crud->setColumns(['id', 'email', 'username']);
        }

        $crud->addPostAddCallBack(array($this, 'hashNewPassword'));
        $crud->addPostEditCallBack(array($this, 'hashEditPassword'));

        // Create an button icon in every register
        $crud->addItemFunction('mailing', 'fa-paper-plane', array($this, 'myCustomPage'), "Enviar un mail");
        // Create an invisible named function in KpaCrud to call after
        $crud->addItemFunction('mpost', '', array($this, 'myCustomPagePost'), "", false);

        /**
         * Available options:
         *
         * - name -> Field name to show user in pages
         * - type -> Field type, available types are:
         *         DEFAULT_FIELD_TYPE 
         *         INVISIBLE_FIELD_TYPE
         *         EMAIL_FIELD_TYPE
         *         CHECKBOX_FIELD_TYPE
         *         NUMBER_FIELD_TYPE 
         *         RANGE_FIELD_TYPE 
         *         DATE_FIELD_TYPE 
         *         DATETIME_FIELD_TYPE 
         *         TEXTAREA_FIELD_TYPE 
         * - default -> default value into add page
         * - check_value/uncheck_value -> You can configure check&uncheck values for a checkbox to store correctly into bd, by default are check=1 / uncheck=0
         * - html_atts -> Permits to add html attribs to a input field, like: required, placeholder, pattern, title, min, max, step... 
         * - options -> Options to show in a dropdown field
         */
        $crud->setColumnsInfo([
            'id' => ['name' => 'Codi'],
            'email' => [
                'name' => 'eCorreu',
                'html_atts' => [
                    'required',
                    'placeholder="Introdueix l\'adreça mail de l\'usuari"'
                ],
                'type' => KpaCrud::EMAIL_FIELD_TYPE
            ],
            'username' => [
                'name' => 'Nom usuari',
                'html_atts' => [
                    "required",
                    "placeholder=\"Introdueix el nom d'usuari\""
                ],
            ],
            // 'active' => [
            //     'type' => KpaCrud::DROPDOWN_FIELD_TYPE,
            //     'options' => ['' => "Tria opcio", 'Usuari desactivat', 'Usuari actiu'],
            //     'html_atts' => [
            //         "required",
            //     ],
            //     'default'=>'1'
            // ],
            'active' => [
                'type' => KpaCrud::CHECKBOX_FIELD_TYPE,
                'html_atts' => [
                    "required",
                ],
                'default' => '1',
                'check_value' => '1',
                'uncheck_value' => '0'
            ],
            'password_hash' => [
                'type' => KpaCrud::PASSWORD_FIELD_TYPE,
                'name' => 'Password',
                'html_atts' => []
            ],

            // 'force_pass_reset' => [
            //     'name' => 'Forçar reset password',
            //     'type' => KpaCrud::CHECKBOX_FIELD_TYPE,
            //     'default'=>'1',
            //     'check_value' => '1',
            //     'uncheck_value' => '0'
            // ],
            'force_pass_reset' => [
                'name' => 'Forçar reset password',
                'type' => KpaCrud::DROPDOWN_FIELD_TYPE,
                'options' => ['' => "Tria opcio", 'Sense canvi password', 'Canviar password'],
                'html_atts' => [
                    "required",
                ],
                'default' => '0',
            ],

            'reset_expires' => [
                'type' => KpaCrud::DATE_FIELD_TYPE,
                'default' => date('Y-m-d', strtotime(date("d-m-Y") . ' + 6 days'))

            ],
            'activate_hash' => ['type' => KpaCrud::INVISIBLE_FIELD_TYPE],
            'reset_hash' => ['type' => KpaCrud::INVISIBLE_FIELD_TYPE],
            'reset_at' => ['type' => KpaCrud::INVISIBLE_FIELD_TYPE],
            'status' => ['type' => KpaCrud::INVISIBLE_FIELD_TYPE],
            'status_message' => ['type' => KpaCrud::INVISIBLE_FIELD_TYPE],

        ]);

        $data['output'] = $crud->render();

        return view('\SIENSIS\KpaCrud\Views\sample\sample', $data);
    }



    /**
     * demo_simpleTable_onlyview - Demo to shows how to get a table CRUD pages, where table has not relations and only a primary key
     * 
     * <pre>
     *  $crud = new KpaCrud();                          // loads default configuration    
     *  $crud->setConfig('onlyView');                   // sets configuration to onlyView
     *                                                  // set into config file
     *  $crud->setTable('news');                        // set table name
     *  $crud->setPrimaryKey('id');                     // set primary key
     *  $crud->setColumns(['id', 'title', 'data_pub']); // set columns/fields to show
     *  $crud->setColumnsInfo([                         // set columns/fields name
     *        'id' => 'Codi',
     *        'title' => 'Titol',
     *        'data_pub' => 'Data publicació',
     *  ]);
     *  $crud->addWhere('news.data_pub>="2022-04-02 21:03:48"'); // show filtered data
     *  $data['output'] = $crud->render();              // renders view
     *  return view('sample', $data);
     * </pre>
     * 
     * @link ../readme.md     To show more functions and samples, to customize your expirience
     *
     * @return void
     * 
     * @version 1.3
     */
    public function demo_simpleTable_onlyview()
    {
        $crud = new KpaCrud('listView'); //loads listView configuration

        /**
         * KpaCrud constructor - Loads library with a configuration difined into KpaCrud file
         * 
         * @example $crud = new KpaCrud('listView');  Loads KpaCrud with listView defined in Config\KpaCrud.php file
         * 
         */

        /**
         * setConfig - Sets all config values with configuration defined into KpaCrud file
         * 
         * @example $crud->setConfig('onlyView');      Set all KpaCrud configuration to values defined as onlyView in Config\KpaCrud.php file 
         */

        // $crud->setTable('news', true);    // Primary key autoload feature
        // or manual primary key set
        $crud->setTable('news');
        $crud->setPrimaryKey('id');

        /**
         * setColumns([column_name1,column_name2,column_name2])
         * 
         * To set table columns to show into CRUD datatable. The column name is
         * the column name with first upper case
         * 
         * If column_name not exists it throws an exception
         * 
         */
        $crud->setColumns(['id', 'title', 'data_pub']);

        /**
         * addWhere ($expression)  or addWhere ($key, $value)
         * 
         * @example 
         *      addWhere('news.id','20'); 
         *      - Adds as a filter news ID equal to 20
         * @example 
         *      addWhere('news.data_pub>="2022-04-02 21:03:48"');    
         *      - Adds as a filter data_pub for news are after 2022-04-02 21:03:48
         * 
         * This function adds a filter when KpaCrud gets items
         */
        $crud->addWhere('news.data_pub>="2022-04-02 21:03:48"');
        // $crud->addWhere('news.id','20');

        /**
         * setColumnsInfo ([column_name1 => title1, column_name2 => title2, column_name3 => title3])
         * 
         * Column name by default is shown with first upper case, if you like to change its name
         * you can use setColumnsInfo, to associate a title to a column_name. You can easily
         * set with an array with all your titles
         * 
         */
        $crud->setColumnsInfo([
            'id' => ['name' => 'Codi', 'type' => 'text'],
            'title' => 'Titol',
            'data_pub' => ['name' => 'Data publicació'],
        ]);
        /**
         * setConfig(config_array) or setConfig(config_collection_name)
         * 
         * This function permits to set parametres to configure your CRUD, you
         * can call function to set parameters individually if you need
         * 
         */

        $crud->setConfig('onlyView');
        $crud->setConfig(["editable" => false,]);

        /**
         * render()
         * 
         * Returns html+css+js generated for CRUD, to insert into your project
         */

        $data['output'] = $crud->render();

        return view('\SIENSIS\KpaCrud\Views\sample\sample', $data);
    }

    /**
     * demo_multikey - Demo to shows how to get a table CRUD pages, where table has two primary keys and no relations
     * 
     * <pre>
     *  $crud = new KpaCrud();                          // loads default configuration    
     *  $crud->setConfig('onlyView');                   // sets configuration to onlyView
     *                                                  // set into config file
     *  $crud->setTable('tokens');                        // set table name
     *  $crud->setPrimaryKey('tokenid');                     // set primary key
     *  $crud->setPrimaryKey('subject');                     // set primary key
     *  $crud->setColumns(['tokenid', 'subject', 'expiration']); // set columns/fields to show
     *  $crud->setColumnsInfo([                         // set columns/fields name
     *        'tokenid' => 'Token',
     *  ]);
     * $crud->setSort([
     *             'tokenid' => false,
     *             'subject' => false,
     *             'expiration' => false
     *         ]);
     *  $data['output'] = $crud->render();              // renders view
     *  return view('sample', $data);
     * </pre>
     *
     * @return void
     * 
     * @version 1.3
     */

    public function demo_multikey()
    {
        $crud = new KpaCrud();

        $crud->setTable('tokens');
        $crud->setPrimaryKey('tokenid');
        $crud->setPrimaryKey('subject');

        $crud->setColumns(['tokenid', 'subject', 'expiration']);

        $crud->setColumnsInfo([
            'tokenid' => 'Token',
        ]);

        /**
         * setSort (column_sort_config)
         * 
         * All columns are sortable if sortable config parameter is set to true, to change
         * configuration for a column, you can disable particularly with this function, the
         * parameter column_sort_config is a associative array with column name with a boolean
         * to enable/disable order feature 
         */
        $crud->setSort([
            'tokenid' => false,
            'subject' => false,
            'expiration' => false
        ]);

        /**
         * setConfig(config_array) or setConfig(config_collection_name)
         * 
         * This function permits to set parametres to configure your CRUD, you
         * can call function to set parameters individually if you need
         * 
         */

        $crud->setConfig('onlyView');

        $data['output'] = $crud->render();
        $data['title'] = 'Demo multikey';
        return view('\SIENSIS\KpaCrud\Views\sample\sample', $data);
    }


    /**
     * demo_relationNM - Demo to shows how to get a table CRUD pages, where table is in the middle of two table, usually a NM relation
     * 
     * <pre>
     *  $crud = new KpaCrud('listView');                          // loads listView configuration    
     * 
     *  $crud->setTable('auth_groups_users');                        // set table name
     * 
     *  $crud->setPrimaryKey('group_id');                     // set primary key
     *  $crud->setPrimaryKey('user_id');                     // set primary key
     * 
     * // display_as is the column name to show in edit / view mode
     * // if not set, relatedfield is shown
     *  $crud->setRelation('group_id', 'auth_groups', 'id', 'name');
     *  $crud->setRelation('user_id', 'users', 'id', 'username');
     * 
     *  $crud->setColumns(['auth_groups__name', 'users__username', 'users__email']);
     *  $crud->setColumnsInfo([
     *       'auth_groups__name' => 'Rol',
     *       'users__username' => 'Usuari',
     *       'users__email' => 'eMail',
     *  ]);
     * $crud->setSort([
     *             'tokenid' => false,
     *             'subject' => false,
     *             'expiration' => false
     *         ]);
     *  $data['output'] = $crud->render();              // renders view
     *  return view('sample', $data);
     * </pre>
     *
     * @return void
     * 
     * @version 1.3
     */

    public function demo_relationNM()
    {
        $crud = new KpaCrud('listView');

        $crud->setTable('auth_groups_users');
        $crud->setPrimaryKey('group_id');
        $crud->setPrimaryKey('user_id');

        // display_as is the column name to show in edit / view mode
        // if not set, relatedfield is shown
        $crud->setRelation('group_id', 'auth_groups', 'id', 'name');
        $crud->setRelation('user_id', 'users', 'id', 'username');

        $crud->setColumns(['auth_groups__name', 'users__username', 'users__email']);

        $crud->setColumnsInfo([
            'auth_groups__name' => 'Rol',
            'users__username' => 'Usuari',
            'users__email' => 'eMail',
        ]);

        /**
         * setConfig(config_array) or setConfig(config_collection_name)
         * 
         * This function permits to set parametres to configure your CRUD, you
         * can call function to set parameters individually if you need
         * 
         */

        $data['output'] = $crud->render();
        $data['title'] = 'Demo relation NM';
        return view('\SIENSIS\KpaCrud\Views\sample\sample', $data);
    }


    /**
     * demo_relation1N - Demo to shows how to get a table CRUD pages, where table has a unique relation
     * 
     * <pre>
     *  $crud = new KpaCrud();                          // loads default configuration    
     * 
     *  $crud->setTable('workers');                        // set table name
     * 
     *  $crud->setPrimaryKey('id');                     // set primary key
     * 
     * // display_as is the column name to show in edit / view mode
     * // if not set, relatedfield is shown
     *  $crud->setRelation('idjob', 'jobs', 'id', 'name');
     * 
     *  $crud->setColumns(['id', 'name', 'surname', 'jobs__name']);
     * 
     *  $crud->setConfig('onlyView');
     *  $crud->setConfig(["editable" => false,]);
     * 
     *  $crud->setColumnsInfo([
     *     'name' => 'Nom',
     *     'surname' => 'Cognom',
     *     'jobs__name' => 'Càrrec',
     *     'idjob' => 'Càrrec',
     *  ]);
     * 
     *  $data['output'] = $crud->render();              // renders view
     *  return view('sample', $data);
     * </pre>
     *
     * @return void
     * 
     * @version 1.3
     */
    public function demo_relation1N()
    {
        $crud = new KpaCrud();


        $crud->setTable('workers');
        $crud->setPrimaryKey('id');

        /**
         * setRelation(field_name, related_table_name, related_table_field_name, related_field_to_display=null )
         * 
         * You can create a relation with two tables with setRelation funcion. 
         * Sample:
         *     Table 'workers' has a field name 'idjob'
         *     Table 'jobs' has a field 'id' that is de foreign key for idjob
         *     Table 'jobs' has also 'name' column that Crud will show in edit/delete/view screens
         * 
         *     related_field_to_display is optional, if it's null Crud will show related_table_field
         */
        $crud->setRelation('idjob', 'jobs', 'id', 'name');

        /**
         *  To show in list or trash screen a related field, you can load with 
         *  setColumns, the name will be 'relatedTableName__relatedTableFieldName
         *  Sample:
         *      List & trash screen will show id,name,surname and the job name stored into jobs table
         */
        $crud->setColumns(['id', 'name', 'surname', 'jobs__name']);

        /**
         * setConfig(config_array) or setConfig(config_collection_name)
         * 
         * This function permits to set parametres to configure your CRUD, you
         * can call function to set parameters individually if you need
         * 
         */

        $crud->setConfig('onlyView');
        $crud->setConfig(["editable" => false,]);

        $crud->setColumnsInfo([
            'name' => 'Nom',
            'surname' => 'Cognom',
            'jobs__name' => 'Càrrec',
            'idjob' => 'Càrrec',
        ]);

        $data['output'] = $crud->render();

        $data['title'] = 'Demo relation 1N';
        return view('\SIENSIS\KpaCrud\Views\sample\sample', $data);
    }
/**
     * demo_relation1N - Demo to shows how to get a table CRUD pages, where table has a unique relation
     * 
     * <pre>
     *  $crud = new KpaCrud();                          // loads default configuration    
     * 
     *  $crud->setTable('treecat');                        // set table name
     * 
     *  $crud->setPrimaryKey('id');                     // set primary key
     * 
     *  $crud->setRelation('pare', 'treecat', 'id', 'desc');
     * 
     *  $crud->setColumns(['desc', 'treecat__desc']);
     * 
     *  $crud->setColumnsInfo([
     *     'treecat__desc' => 'Parent',
     *  ]);
     * 
     *  $data['output'] = $crud->render();              // renders view
     *  return view('sample', $data);
     * </pre>
     *
     * @return void
     * 
     * @version 1.4.5
     */
    public function demo_selfrelation1N()
    {
        $crud = new KpaCrud();
        $crud->setTable('treecat');
        $crud->setPrimaryKey('id');

        $crud->setRelation('pare', 'treecat', 'id', 'desc');

        $crud->setColumns(['desc', 'treecat__desc']);
        
       $crud->setColumnsInfo([
          'treecat__desc' => 'Parent',
       ]);
        $data['output'] = $crud->render();

        $data['title'] = 'Demo self- relation 1N';
        return view('\SIENSIS\KpaCrud\Views\sample\sample', $data);
    }
}
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:28:"\SIENSIS\KpaCrud\Controllers";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:28:"\SIENSIS\KpaCrud\Controllers";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"Controllers";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:52:"\SIENSIS\KpaCrud\Controllers\KpaCrudSampleController";O:35:"phpDocumentor\Reflection\Php\Class_":13:{s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:52:"\SIENSIS\KpaCrud\Controllers\KpaCrudSampleController";s:36:" phpDocumentor\Reflection\Fqsen name";s:23:"KpaCrudSampleController";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:85:"KpaCrudSampleController - Is a sample controller, to view how to use KpaCrud Library.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:161:"- Shows a simple table like News
- Shows a table with two primary keys
- Shows a table whit two 1=>N relations
- Shows a table with a 1=>N relation workers=>jobs";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:43:"phpDocumentor\Reflection\DocBlock\Tags\Link":3:{s:7:" * name";s:4:"link";s:49:" phpDocumentor\Reflection\DocBlock\Tags\Link link";s:12:"../readme.md";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:67:"To view KpaCrud functions and samples, to customize your expirience";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:7:"package";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:15:"App\Controllers";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:27:"SIENSIS\KpaCrud\Controllers";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:2:{s:14:"BaseController";s:30:"App\Controllers\BaseController";s:7:"KpaCrud";s:33:"SIENSIS\KpaCrud\Libraries\KpaCrud";}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:43:" phpDocumentor\Reflection\Php\Class_ parent";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:31:"\App\Controllers\BaseController";s:36:" phpDocumentor\Reflection\Fqsen name";s:14:"BaseController";}s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:0:{}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:10:{s:71:"\SIENSIS\KpaCrud\Controllers\KpaCrudSampleController::hashNewPassword()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:71:"\SIENSIS\KpaCrud\Controllers\KpaCrudSampleController::hashNewPassword()";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"hashNewPassword";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:8:"postData";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:23;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:27;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:72:"\SIENSIS\KpaCrud\Controllers\KpaCrudSampleController::hashEditPassword()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:72:"\SIENSIS\KpaCrud\Controllers\KpaCrudSampleController::hashEditPassword()";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"hashEditPassword";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:8:"postData";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:28;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:35;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:68:"\SIENSIS\KpaCrud\Controllers\KpaCrudSampleController::myCustomPage()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:68:"\SIENSIS\KpaCrud\Controllers\KpaCrudSampleController::myCustomPage()";s:36:" phpDocumentor\Reflection\Fqsen name";s:12:"myCustomPage";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:3:"obj";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:36;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:72;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:72:"\SIENSIS\KpaCrud\Controllers\KpaCrudSampleController::myCustomPagePost()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:72:"\SIENSIS\KpaCrud\Controllers\KpaCrudSampleController::myCustomPagePost()";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"myCustomPagePost";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:3:"obj";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:73;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:82;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:77:"\SIENSIS\KpaCrud\Controllers\KpaCrudSampleController::demo_simpleTable_full()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";N;s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:77:"\SIENSIS\KpaCrud\Controllers\KpaCrudSampleController::demo_simpleTable_full()";s:36:" phpDocumentor\Reflection\Fqsen name";s:21:"demo_simpleTable_full";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:83;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:198;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:81:"\SIENSIS\KpaCrud\Controllers\KpaCrudSampleController::demo_simpleTable_onlyview()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:125:"demo_simpleTable_onlyview - Demo to shows how to get a table CRUD pages, where table has not relations and only a primary key";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:810:"<pre>
 $crud = new KpaCrud();                          // loads default configuration
 $crud->setConfig('onlyView');                   // sets configuration to onlyView
                                                 // set into config file
 $crud->setTable('news');                        // set table name
 $crud->setPrimaryKey('id');                     // set primary key
 $crud->setColumns(['id', 'title', 'data_pub']); // set columns/fields to show
 $crud->setColumnsInfo([                         // set columns/fields name
       'id' => 'Codi',
       'title' => 'Titol',
       'data_pub' => 'Data publicació',
 ]);
 $crud->addWhere('news.data_pub>="2022-04-02 21:03:48"'); // show filtered data
 $data['output'] = $crud->render();              // renders view
 return view('sample', $data);
</pre>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:3:{i:0;O:43:"phpDocumentor\Reflection\DocBlock\Tags\Link":3:{s:7:" * name";s:4:"link";s:49:" phpDocumentor\Reflection\DocBlock\Tags\Link link";s:12:"../readme.md";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:64:"To show more functions and samples, to customize your expirience";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:2;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Version":3:{s:7:" * name";s:7:"version";s:55:" phpDocumentor\Reflection\DocBlock\Tags\Version version";s:3:"1.3";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:36;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:81:"\SIENSIS\KpaCrud\Controllers\KpaCrudSampleController::demo_simpleTable_onlyview()";s:36:" phpDocumentor\Reflection\Fqsen name";s:25:"demo_simpleTable_onlyview";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:228;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:309;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:69:"\SIENSIS\KpaCrud\Controllers\KpaCrudSampleController::demo_multikey()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:110:"demo_multikey - Demo to shows how to get a table CRUD pages, where table has two primary keys and no relations";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:884:"<pre>
 $crud = new KpaCrud();                          // loads default configuration
 $crud->setConfig('onlyView');                   // sets configuration to onlyView
                                                 // set into config file
 $crud->setTable('tokens');                        // set table name
 $crud->setPrimaryKey('tokenid');                     // set primary key
 $crud->setPrimaryKey('subject');                     // set primary key
 $crud->setColumns(['tokenid', 'subject', 'expiration']); // set columns/fields to show
 $crud->setColumnsInfo([                         // set columns/fields name
       'tokenid' => 'Token',
 ]);
$crud->setSort([
            'tokenid' => false,
            'subject' => false,
            'expiration' => false
        ]);
 $data['output'] = $crud->render();              // renders view
 return view('sample', $data);
</pre>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Version":3:{s:7:" * name";s:7:"version";s:55:" phpDocumentor\Reflection\DocBlock\Tags\Version version";s:3:"1.3";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:36;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:69:"\SIENSIS\KpaCrud\Controllers\KpaCrudSampleController::demo_multikey()";s:36:" phpDocumentor\Reflection\Fqsen name";s:13:"demo_multikey";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:339;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:380;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:71:"\SIENSIS\KpaCrud\Controllers\KpaCrudSampleController::demo_relationNM()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:127:"demo_relationNM - Demo to shows how to get a table CRUD pages, where table is in the middle of two table, usually a NM relation";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:990:"<pre>
 $crud = new KpaCrud('listView');                          // loads listView configuration

 $crud->setTable('auth_groups_users');                        // set table name

 $crud->setPrimaryKey('group_id');                     // set primary key
 $crud->setPrimaryKey('user_id');                     // set primary key

// display_as is the column name to show in edit / view mode
// if not set, relatedfield is shown
 $crud->setRelation('group_id', 'auth_groups', 'id', 'name');
 $crud->setRelation('user_id', 'users', 'id', 'username');

 $crud->setColumns(['auth_groups__name', 'users__username', 'users__email']);
 $crud->setColumnsInfo([
      'auth_groups__name' => 'Rol',
      'users__username' => 'Usuari',
      'users__email' => 'eMail',
 ]);
$crud->setSort([
            'tokenid' => false,
            'subject' => false,
            'expiration' => false
        ]);
 $data['output'] = $crud->render();              // renders view
 return view('sample', $data);
</pre>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Version":3:{s:7:" * name";s:7:"version";s:55:" phpDocumentor\Reflection\DocBlock\Tags\Version version";s:3:"1.3";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:36;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:71:"\SIENSIS\KpaCrud\Controllers\KpaCrudSampleController::demo_relationNM()";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"demo_relationNM";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:419;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:451;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:71:"\SIENSIS\KpaCrud\Controllers\KpaCrudSampleController::demo_relation1N()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:96:"demo_relation1N - Demo to shows how to get a table CRUD pages, where table has a unique relation";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:753:"<pre>
 $crud = new KpaCrud();                          // loads default configuration

 $crud->setTable('workers');                        // set table name

 $crud->setPrimaryKey('id');                     // set primary key

// display_as is the column name to show in edit / view mode
// if not set, relatedfield is shown
 $crud->setRelation('idjob', 'jobs', 'id', 'name');

 $crud->setColumns(['id', 'name', 'surname', 'jobs__name']);

 $crud->setConfig('onlyView');
 $crud->setConfig(["editable" => false,]);

 $crud->setColumnsInfo([
    'name' => 'Nom',
    'surname' => 'Cognom',
    'jobs__name' => 'Càrrec',
    'idjob' => 'Càrrec',
 ]);

 $data['output'] = $crud->render();              // renders view
 return view('sample', $data);
</pre>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Version":3:{s:7:" * name";s:7:"version";s:55:" phpDocumentor\Reflection\DocBlock\Tags\Version version";s:3:"1.3";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:36;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:71:"\SIENSIS\KpaCrud\Controllers\KpaCrudSampleController::demo_relation1N()";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"demo_relation1N";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:488;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:539;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}s:75:"\SIENSIS\KpaCrud\Controllers\KpaCrudSampleController::demo_selfrelation1N()";O:35:"phpDocumentor\Reflection\Php\Method":12:{s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:96:"demo_relation1N - Demo to shows how to get a table CRUD pages, where table has a unique relation";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:496:"<pre>
 $crud = new KpaCrud();                          // loads default configuration

 $crud->setTable('treecat');                        // set table name

 $crud->setPrimaryKey('id');                     // set primary key

 $crud->setRelation('pare', 'treecat', 'id', 'desc');

 $crud->setColumns(['desc', 'treecat__desc']);

 $crud->setColumnsInfo([
    'treecat__desc' => 'Parent',
 ]);

 $data['output'] = $crud->render();              // renders view
 return view('sample', $data);
</pre>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * type";O:36:"phpDocumentor\Reflection\Types\Void_":0:{}s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Version":3:{s:7:" * name";s:7:"version";s:55:" phpDocumentor\Reflection\DocBlock\Tags\Version version";s:5:"1.4.5";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:36;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:75:"\SIENSIS\KpaCrud\Controllers\KpaCrudSampleController::demo_selfrelation1N()";s:36:" phpDocumentor\Reflection\Fqsen name";s:19:"demo_selfrelation1N";}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:566;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:583;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:20;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Class_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:584;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:45:" phpDocumentor\Reflection\Php\Class_ metadata";a:0:{}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";