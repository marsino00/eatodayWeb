1684722036
waR3U4bTeM%3Aa27a5d685f3dc27e3721381d2ef5e4c6-768f9ec4a0c71eacf3fba44ff087cc31
s:25612:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:90:"Edit page view. Shows edit form interface with configured table fields and related fields.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:6:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:7:"package";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:13:"KpaCrud\Views";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Version":3:{s:7:" * name";s:7:"version";s:55:" phpDocumentor\Reflection\DocBlock\Tags\Version version";s:3:"1.2";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:2;O:45:"phpDocumentor\Reflection\DocBlock\Tags\Author":4:{s:7:" * name";s:6:"author";s:57:" phpDocumentor\Reflection\DocBlock\Tags\Author authorName";s:5:"JMFXR";s:58:" phpDocumentor\Reflection\DocBlock\Tags\Author authorEmail";s:15:"dev@siensis.com";s:14:" * description";N;}i:3;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:9:"copyright";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:16:"2022 SIENSIS Dev";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:4;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:7:"license";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:158:"MIT

This source file is subject to the MIT license that is bundled
with this source code in the file LICENSE.

This code is provided for educational purposes";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:5;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:6:"ignore";s:14:" * description";N;}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"768f9ec4a0c71eacf3fba44ff087cc31";s:39:" phpDocumentor\Reflection\Php\File name";s:8:"edit.php";s:39:" phpDocumentor\Reflection\Php\File path";s:41:"vendor/siensis/kpacrud/src/Views/edit.php";s:41:" phpDocumentor\Reflection\Php\File source";s:11478:"<?php

/**
 * Edit page view. Shows edit form interface with configured table fields and related fields.
 * 
 * @package KpaCrud\Views
 * 
 * @version 1.2
 * @author JMFXR <dev@siensis.com> 
 * @copyright 2022 SIENSIS Dev
 * @license MIT
 *
 * This source file is subject to the MIT license that is bundled
 * with this source code in the file LICENSE.
 * 
 * This code is provided for educational purposes
 * 
 * @ignore 
 */

use SIENSIS\KpaCrud\Libraries\KpaCrud;

renderCSS($css_files, $_hidden_head_links);
renderJS($js_files, $_hidden_head_links);

?>
<script>
    function checkInput(obj) {
        if (obj.value == '')
            obj.classList.remove('is-invalid', 'is-valid');
        else if (!obj.checkValidity()) {
            obj.classList.add('is-invalid');
            obj.classList.remove('is-valid');
        } else {
            obj.classList.remove('is-invalid');
            obj.classList.add('is-valid');
        }
    }
</script>
<div style="margin-top:20px" class="border bg-light">
    <form method="post" id="edit_item" name="edit_item" action="<?= base_url($_route . '?edit=item' . $id) ?>">
        <input type="hidden" name="op" value="edit">
        <?= csrf_field(); ?>

        <div class="bg-secondary p-2 text-white">
            <h1><?= lang('crud.titles.edit'); ?></h1>
        </div>
        <div class="d-grid" style="margin-top:20px">
            <?php
            foreach ($tableFields as $dbfield) {

                if ($config['useTimestamps'] == true) {

                    // show all fields
                    // if !useSoftDeletes && field==delete
                    if ($dbfield->Field == $config['deletedField']) {
                        if ($config['useSoftDeletes'] == false)
                            ShowField($dbfield, $data, $_data_columns, $_relations);
                    } else {
                        //show if not created || updated
                        if ($dbfield->Field != $config['createdField'] && $dbfield->Field != $config['updatedField']) {
                            ShowField($dbfield, $data, $_data_columns, $_relations);
                        } else {
                            if ($config['showTimestamps'] == true) {   //useTimestamps && showTimestamps
                                ShowField($dbfield, $data, $_data_columns, $_relations, false);
                            }
                        }
                    }
                } else {
                    // show all fields 
                    if ($dbfield->Field == $config['deletedField']) {
                        if ($config['useSoftDeletes'] == false)
                            ShowField($dbfield, $data, $_data_columns, $_relations);
                    } else
                        ShowField($dbfield, $data, $_data_columns, $_relations);
                }
            } //end foreach field

            /** @ignore */
            function ShowField($dbfield, $data, $_data_columns, $_relations, $editable = true)
            {
                $colname = $_data_columns[$dbfield->Field]['name'] ?? ucfirst($dbfield->Field);
                $coltype = $_data_columns[$dbfield->Field]['type'] ?? KpaCrud::DEFAULT_FIELD_TYPE;
                $colhtmlatts = $_data_columns[$dbfield->Field]['html_atts'] ?? [""];
                if ($coltype != KpaCrud::INVISIBLE_FIELD_TYPE) {
                    if (isset($_relations[$dbfield->Field])) {      // IF RELATED field
                        echo "<div class='p-2 form-group'>";
                        echo "\t<label for='data_" . $dbfield->Field . "'>" . $colname . "</label>";

                        $options = $_relations[$dbfield->Field]['options'];

                        $atts = [
                            'class'       => 'form-select',
                            'id'    => "data_" . $dbfield->Field,
                        ];

                        echo form_dropdown("data_" . $dbfield->Field, $options, $data[$dbfield->Field], $atts);
                        echo "</div>";
                    } elseif ($dbfield->Extra != 'auto_increment') { //IF is normal column
                        echo "<div class='p-2 '>";
                        echo "\t<label>" . $colname . "</label>";
                        if ($editable) {
                            switch ($coltype) {
                                case strval(KpaCrud::DROPDOWN_FIELD_TYPE):
                                    $coloptions = $_data_columns[$dbfield->Field]['options'] ?? [""];
                                    $atts = "class='form-select' id='data_" . $dbfield->Field . "' onchange='checkInput(this)' ";
                                    $atts = $atts . implode(" ", $colhtmlatts);

                                    echo form_dropdown("data_" . $dbfield->Field, $coloptions, $data[$dbfield->Field], $atts);
                                    break;
                                case strval(KpaCrud::RANGE_FIELD_TYPE):
                                    echo "\t<input type='range' name='data_" . $dbfield->Field . "' ";
                                    echo " " .  implode(" ", $colhtmlatts), " ";
                                    echo " onchange='checkInput(this)' ";
                                    echo " value='" . $data[$dbfield->Field] . "' ";
                                    echo " oninput='this.nextElementSibling.innerHTML = this.value' ";
                                    echo " class='form-range' style='width:90%'>";
                                    echo " <span class='align-text-bottom fs-4'>" . $data[$dbfield->Field] . "</span>";
                                    break;
                                case strval(KpaCrud::NUMBER_FIELD_TYPE):
                                    echo "\t<input type='number' name='data_" . $dbfield->Field . "' ";
                                    echo " " .  implode(" ", $colhtmlatts), " ";
                                    echo " onchange='checkInput(this)' ";
                                    echo " value='" . $data[$dbfield->Field] . "' ";
                                    echo " class='form-control' >";
                                    break;
                                case strval(KpaCrud::CHECKBOX_FIELD_TYPE):
                                    $check_value = $_data_columns[$dbfield->Field]['check_value'] ?? KpaCrud::DEFAULT_CHECK_VALUE;
                                    echo "\t<input type='checkbox' name='data_" . $dbfield->Field . "' class='form-check-input' value='" . $check_value . "' ";
                                    echo " " .  implode(" ", $colhtmlatts), " ";

                                    if ($data[$dbfield->Field])
                                        echo "checked='checked' >";
                                    else
                                        echo ">";

                                    echo "&nbsp;</div>";
                                    break;
                                case strval(KpaCrud::DATE_FIELD_TYPE):
                                    echo "\t<input type='date' ";
                                    echo " " .  implode(" ", $colhtmlatts), " ";
                                    echo " onchange='checkInput(this)' ";
                                    echo " value='" . date('Y-m-d', strtotime($data[$dbfield->Field])) . "'";
                                    echo " name='data_" . $dbfield->Field . "' class='form-control' >";
                                    break;
                                case strval(KpaCrud::DATETIME_FIELD_TYPE):
                                    echo "\t<input type='datetime-local' ";
                                    echo " " .  implode(" ", $colhtmlatts), " ";
                                    echo " onchange='checkInput(this)' ";
                                    echo " value='" . date('Y-m-d\TH:i', strtotime($data[$dbfield->Field])) . "'";
                                    echo " name='data_" . $dbfield->Field . "' class='form-control' >";
                                    break;
                                case strval(KpaCrud::PASSWORD_FIELD_TYPE):
                                    echo "\t<input type='password' ";
                                    echo " " .  implode(" ", $colhtmlatts), " ";
                                    echo " onchange='checkInput(this)' ";
                                    echo " value='" . $data[$dbfield->Field] . "'";
                                    echo " name='data_" . $dbfield->Field . "' class='form-control' >";

                                    echo "\t<input type='hidden' ";
                                    echo " value='" . $data[$dbfield->Field] . "'";
                                    echo " name='olddata_" . $dbfield->Field . "' >";
                                    break;
                                case strval(KpaCrud::EMAIL_FIELD_TYPE):
                                    echo "\t<input type='email' pattern='[a-z0-9._%+-]+@[a-z0-9.-]+\.[a-z]{2,}$'";
                                    echo " " .  implode(" ", $colhtmlatts), " ";
                                    echo " onchange='checkInput(this)' ";
                                    echo " value='" . $data[$dbfield->Field] . "'";
                                    echo " name='data_" . $dbfield->Field . "' class='form-control' >";
                                    break;
                                case strval(KpaCrud::TEXTAREA_FIELD_TYPE):
                                    echo "\t<textarea name='data_" . $dbfield->Field . "' ";
                                    echo " " .  implode(" ", $colhtmlatts), " ";
                                    echo " onchange='checkInput(this)' ";
                                    echo " class='form-control'>";
                                    echo $data[$dbfield->Field];
                                    echo "</textarea>";
                                    break;
                                default:
                                    echo "\t<input type='text' name='data_" . $dbfield->Field . "' ";
                                    echo " " .  implode(" ", $colhtmlatts), " ";
                                    echo " onchange='checkInput(this)' ";
                                    echo " class='form-control' value='" . $data[$dbfield->Field] . "'>";
                            }
                        } else
                            echo "\t<div class='form-control bg-light'>" . $data[$dbfield->Field] . "&nbsp;</div>";
                        echo "</div>";
                    } else {                                        // IF is primary key
                        echo "<div class='p-2 '>";
                        echo "\t<label>" . $colname . "</label>";
                        echo "\t<input type='text'  class='form-control disabled' readonly value='" . $data[$dbfield->Field] . "'>";
                        echo "\t\t<input type='hidden' name='data_" . $dbfield->Field . "' value='" . $data[$dbfield->Field] . "'>";
                        echo "</div>";
                    }
                }
            }

            ?>

            <div class="p-3 bg-secondary mt-5">
                <button type="submit" class="btn btn-primary btn-block"><?= lang('crud.btnUpdate'); ?></button>
                <a href="<?= base_url($_route) ?>" class="btn btn-light btn-block"><?= lang('crud.btnCancel'); ?></a>
            </div>
        </div>

    </form>
</div>";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:1:{s:12:"\ShowField()";O:38:"phpDocumentor\Reflection\Php\Function_":8:{s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:12:"\ShowField()";s:36:" phpDocumentor\Reflection\Fqsen name";s:9:"ShowField";}s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:5:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:7:"dbfield";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:4:"data";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:2;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:13:"_data_columns";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:3;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:10:"_relations";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:4;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:8:"editable";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";s:4:"true";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:0:"";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:6:"ignore";s:14:" * description";N;}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:80;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:196;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}}}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";